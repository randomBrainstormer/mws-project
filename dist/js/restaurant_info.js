let restaurant;var map;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),document.querySelector("#review-form").addEventListener("submit",e=>{e.preventDefault();const t=getParameterByName("id"),r=new FormData(e.target),n={id:"needs_sync",restaurant_id:t,name:r.get("name"),rating:r.get("rating"),comments:r.get("comments")};DBHelper.addReviewToIndexedDB(n),navigator.serviceWorker.ready.then(function(e){return console.log("syncReviews registered"),e.sync.register("syncReviews")}),e.target.reset(),loadRestaurantReviews(t,(e,t)=>{console.log("reviews",t),e||(self.restaurant.reviews=t)})}),document.querySelector("#favoritesBtn").addEventListener("click",e=>{const t=getParameterByName("id"),r="true"===e.target.dataset.faved;fetch(`http://localhost:1337/restaurants/${t}/?is_favorite=${!r}`,{method:"put"}).then(t=>{"OK"===t.statusText&&(console.log("fave value",t),e.target.innerHTML=r?"Add to your faves list":"Remove from faves list",e.target.dataset.faved=!r)}).catch(e=>console.error("En error occured",e))}),loadRestaurantReviews=((e,t)=>{console.log("attempting to load reviews from server"),DBHelper.fetchRestaurantReviews(e,t)}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,r)=>{self.restaurant=r,r?(fillRestaurantHTML(),e(null,r)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.alt="restaurant image",t.src=DBHelper.imageUrlForRestaurant(e),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type,e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let r in e){const n=document.createElement("tr"),a=document.createElement("td");a.innerHTML=r,n.appendChild(a);const s=document.createElement("td");s.innerHTML=e[r],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container");if(!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const r=document.getElementById("reviews-list");r.innerHTML="",loadRestaurantReviews(self.restaurant.id,(e,t)=>{e||(t.reverse(),t.forEach(e=>{r.appendChild(createReviewHTML(e))}))}),e.forEach(e=>{r.appendChild(createReviewHTML(e))}),t.appendChild(r)}),createReviewHTML=(e=>{const t=document.createElement("li"),r=document.createElement("div");r.classList.add("review-header");const n=document.createElement("span");n.innerHTML=e.name,r.appendChild(n);const a=document.createElement("span");a.innerHTML=e.date||formatDate(e.updatedAt),r.appendChild(a),t.appendChild(r);const s=document.createElement("p");s.classList.add("review-rating"),s.innerHTML=`Rating: ${e.rating}`,t.appendChild(s);const o=document.createElement("p");return o.innerHTML=e.comments||e.review,t.appendChild(o),t}),formatDate=(e=>{const t=new Date(e);return`${t.toLocaleDateString("en-us",{month:"long"})} ${t.getDay()}, ${t.getYear()}`}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),r=document.createElement("li");r.innerHTML=e.name,t.appendChild(r)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const r=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return r?r[2]?decodeURIComponent(r[2].replace(/\+/g," ")):"":null});